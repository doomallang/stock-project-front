{"ast":null,"code":"var _jsxFileName = \"/Users/aton/project/stockproject-front/src/container/MainContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\n\n// ACTION\nimport * as StockAction from '../action/StockAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainContainer() {\n  _s();\n  const [themeStockList, setThemeStockList] = useState([]);\n  useEffect(() => {\n    getStockRecommendList();\n  }, []);\n  async function getStockRecommendList() {\n    const list = await StockAction.getStockRecommendList();\n    await setThemeStockList(list);\n  }\n  const rows = setThemeStockList;\n  const columns = [{\n    field: 'theme',\n    headerName: '테마',\n    width: 150\n  }, {\n    field: 'themesInfo',\n    headerName: '정보',\n    width: 500\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: \"width:20%;\",\n          children: \"\\uD14C\\uB9C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), themeStockList && themeStockList.map((list, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: list.theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: list.themeInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MainContainer, \"09l0eimWhu5ksxr5r1GCxN6jppw=\");\n_c = MainContainer;\nvar _c;\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"names":["useEffect","useState","DataGrid","GridRowsProp","GridColDef","StockAction","jsxDEV","_jsxDEV","Fragment","_Fragment","MainContainer","_s","themeStockList","setThemeStockList","getStockRecommendList","list","rows","columns","field","headerName","width","children","style","fileName","_jsxFileName","lineNumber","columnNumber","map","index","theme","themeInfo","_c","$RefreshReg$"],"sources":["/Users/aton/project/stockproject-front/src/container/MainContainer.jsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\n\n// ACTION\nimport * as StockAction from '../action/StockAction'\n\nexport default function MainContainer() {\n    const [themeStockList, setThemeStockList] = useState([])\n    useEffect(() => {\n        getStockRecommendList()\n    }, [])\n\n    async function getStockRecommendList() {\n        const list = await StockAction.getStockRecommendList()\n        await setThemeStockList(list)\n    }\n\n    const rows: GridRowsProp = setThemeStockList\n\n    const columns: GridColDef[] = [\n        { field: 'theme', headerName: '테마', width: 150 },\n        { field: 'themesInfo', headerName: '정보', width: 500 },\n    ];\n\n\n    return (\n        <>\n            <div>\n                <tr>\n                    <th style=\"width:20%;\">테마</th>\n                    <th>정보</th>\n                </tr>\n                { themeStockList && themeStockList.map((list, index) =>\n                    <tr>\n                        <td>{list.theme}</td>\n                        <td>{list.themeInfo}</td>\n                    </tr>\n                )}\n            </div>\n        </>\n    )\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAASC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,kBAAkB;;AAErE;AACA,OAAO,KAAKC,WAAW,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxDD,SAAS,CAAC,MAAM;IACZc,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,qBAAqBA,CAAA,EAAG;IACnC,MAAMC,IAAI,GAAG,MAAMV,WAAW,CAACS,qBAAqB,CAAC,CAAC;IACtD,MAAMD,iBAAiB,CAACE,IAAI,CAAC;EACjC;EAEA,MAAMC,IAAkB,GAAGH,iBAAiB;EAE5C,MAAMI,OAAqB,GAAG,CAC1B;IAAEC,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC,EAChD;IAAEF,KAAK,EAAE,YAAY;IAAEC,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC,CACxD;EAGD,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAIe,KAAK,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BnB,OAAA;UAAAc,QAAA,EAAI;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,EACHd,cAAc,IAAIA,cAAc,CAACe,GAAG,CAAC,CAACZ,IAAI,EAAEa,KAAK,kBAC/CrB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAKN,IAAI,CAACc;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnB,OAAA;UAAAc,QAAA,EAAKN,IAAI,CAACe;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACR,CAAC;AAEX;AAACf,EAAA,CAnCuBD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}